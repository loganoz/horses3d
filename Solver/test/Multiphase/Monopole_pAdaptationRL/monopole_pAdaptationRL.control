/* Control file to run the TaylorGreenVortex*/

mesh file name        =  "MESH/cube2D.msh"
Polynomial order i = 4
Polynomial order j = 4
Polynomial order k = 1

Number of time steps  = 100
Output Interval       = 100

Convergence tolerance = 1.d-10
dt                   = 0.0000005
Number of fluids (1/2) = 2
fluid 1 density (kg/m^3) = 1.0
fluid 1 viscosity (Pa.s) = 1.8d-5 !0.1
fluid 2 density (kg/m^3) = 1000.0 !2.0
fluid 2 viscosity (Pa.s) = 1d-3 !0.1
!Minimum density (kg/m^3) = 1.2
!Maximum density (kg/m^3) = 1.3
reference velocity (m/s) = 1
velocity direction = [1,0,0]
fluid 1 sound speed square (m/s) = 116281.6  !341.0^2 !rho_ref*c^2*vref^2 ! c^2=111556 ! p = rho_ref*c^2*vref^2 *pnondim
fluid 2 sound speed square (m/s) = 2193361.6 !1418.0^2   !rho_ref*c^2*vref^2 ! c^2=111556 ! p = rho_ref*c^2*vref^2 *pnondim
Froude number = 1.0d+300
Prandtl number = 0.72

AOA theta             = 0.0
AOA phi               = 0.0

solution file name    = "RESULTS/monopole_mu.hsol" 
save gradients with solution = .false.
restart               = .false.
restart file name     = "RESULTS/monopole_mu.hsol"

simulation type       = time-accurate
final time            = 0.02

autosave mode         = "iteration"
autosave interval     = 1000

Discretization nodes  = Gauss 
riemann solver        = Exact
Lambda stabilization = 1.0
Viscous discretization = BR1 
Cahn-Hilliard discretization = BR1

chemical characteristic time (s) = 400 !400 !1.0d12 !1000.0  !50000
interface width (m) = 0.25 
interface tension (N/m) = 0.0728 !1.0d-12 !0.01

Time integration = Explicit

!-------------------------------------------------------------
!------ sponge --------
!-------------------------------------------------------------

use sponge                  = .true.
sponge amplitude            = 5000.0 
sponge ramp width           = 1.0
sponge temporal width       = 2.0
sponge use moving average   = .true.

number of sponges           = 4

sponge shape 1              = cartesian 
sponge axis 1               = "[1.0,0.0,0.0]"  
sponge start position 1     = "[4.0,0.0,0.0]"  

sponge shape 2              = cartesian 
sponge axis 2               = "[-1.0,0.0,0.0]"  
sponge start position 2     = "[-4.0,0.0,0.0]"

sponge shape 3              = cartesian 
sponge axis 3               = "[0.0,1.0,0.0]"  
sponge start position 3     = "[0.0,4.0,0.0]"  

sponge shape 4              = cartesian 
sponge axis 4               = "[0.0,-1.0,0.0]"  
sponge start position 4     = "[0.0,-4.0,0.0]"  

!------------
! P-Adaptation
!------------
save sensor with solution = .true.

#define p-adaptation
   adaptation type       = RL
   agent file            = policy_padaptation/p_adaptation_policy
   tolerance             = 5d-3
   Nmax                  = [6, 6, 1]
   Nmin                  = [2, 2, 1]
   adjust nz             = .FALSE.
   restart files         = .FALSE.
   order across faces    = N*2/3
   mode                  = iteration
   interval              = 100
   threshold             = 1.0
   error estimation      = .false.
   acoustics             = .TRUE.
   acoustic tolerance    = 1d-5
   acoustic distance     = 2.5d0
   acoustic observer     = [0.0d0, 0.0d0, 5.0d0]
   acoustic sources      = [bottom]
#end

#define overenriching box 1
   order  = 4
   x span = [4, 8] 
   y span = [-8, 8]
   z span = [-8, 8]
   mode   = set      ! set -> fixed P order; increase -> every time it adapts, applies the specified increase to the box
#end

#define overenriching box 2
   order  = 4
   x span = [-8, -4]
   y span = [-8, 8]
   z span = [-8, 8]
   mode   = set      ! set -> fixed P order; increase -> every time it adapts, applies the specified increase to the box
#end

#define overenriching box 3
   order  = 4
   x span = [-8, 8]
   y span = [4, 8]
   z span = [-8, 8]
   mode   = set      ! set -> fixed P order; increase -> every time it adapts, applies the specified increase to the box
#end

#define overenriching box 4
   order  = 4
   x span = [-8, 8]
   y span = [-8, -4]
   z span = [-8, 8]
  mode   = set      ! set -> fixed P order; increase -> every time it adapts, applies the specified increase to the box
#end

!-------------------------------------------------------------
!------ BC --------
!-------------------------------------------------------------

#define boundary front__back__top__bottom
    type = FreeSlipWall
#end

#define boundary right
   type = Periodic
   coupled boundary = left
#end

#define boundary left
   type = Periodic
   coupled boundary = right
#end
