Flow equations        = "Mu"
mesh file name        = "../../TestMeshes/ActuatorBox.msh"
Polynomial order      = 1
Number of time steps  = 50
Convergence tolerance = 1.0e-13
Output Interval       = 10

!only constant dt for this solve
dt                    = 1.5d-4

! AL case of one single fluid, 2 fluid with same properties
Number of fluids (1/2) = 1

fluid 1 density (kg/m^3) = 1.22145354210477
fluid 1 viscosity (Pa.s) = 1.831943887d-5
reference velocity (m/s) = 9.99870964366903
velocity direction = [1,0,0]
fluid 1 sound speed square (m/s) = 116136.222222222 ! for air, corresponds to ns and ins test
fluid 2 sound speed square (m/s) = 116136.222222222

fluid 2 density (kg/m^3) = 1.22145354210477
fluid 2 viscosity (Pa.s) = 1.831943887d-5

chemical characteristic time (s) = 1000000
interface width (m) = 0.04
interface tension (N/m) = 72.8e-3

AOA theta             = 0.0
AOA phi               = 0.0

solution file name    = "RESULTS/actuator.hsol"
save gradients with solution = .false.
restart               = .false.
restart file name     = "RESULTS/actuator.hsol"

autosave mode         = "time"
autosave interval     = 2.0

! ACTUATOR LINE
use actuatorline = .true.
actuator epsilon type = 2 ! calculate epsilon based on mesh cell size and p
actuator calculate with projection = .false. ! interpolation formulation
actuator save average = .false.
actuator save instant = .false.
actuator tolerance = 0.7 ! high tolerance for finding elements near the rotor for coarse mesh

Discretization nodes = Gauss-Lobatto ! GL nodes for hardcoded energy conserving
Riemann solver        = Exact
Viscous discretization = BR1
Cahn-Hilliard discretization = BR1

!-- TIME discret--
simulation type       = time-accurate
final time            = 5.d0

!---TURB---
LES model             = Vreman

partitioning = SFC

!------------
! BC
!------------

#define boundary inlet
      !type = Inflow
      type = User-defined
#end

#define boundary sideA__sideB
      type = FreeSlipWall
#end

#define boundary top__bottom
      type = FreeSlipWall
#end

#define boundary outlet
      type = Outflow
#end

!------------
! monitors
!------------
#define volume monitor 1
   Name = source
   Variable = source
#end
